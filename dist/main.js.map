{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAAqD;;AAErD;;AAEO;;AAEP;AACA;;AAEA,qBAAqB,8DAAgB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClD8D;;AAEvD;AACP;AACA;;AAEA;AACA;AACA,gDAAgD;AAChD,0BAA0B;;AAE1B,wBAAwB,yDAAO;AAC/B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,oBAAoB,yDAAO;AAC3B;AACA,IAAI,8DAAgB;AACpB,IAAI,8DAAgB;AACpB;;;;;;;;;;;;;;;AClDA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;;AAEO;;AAEP;AACA;AACA;AACA;;AAEA;;AAEA,YAAY;AACZ,GAAG;;;;;;UC3BH;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA;AAC6F;AAC3B;;AAElE,4EAAiB;AACjB,oEAAW;;AAEX;AACA;AACA;AACA;AACA,IAAI,qEAAU;;AAEd,IAAI,2EAAgB;AACpB,IAAI,kEAAS;;AAEb,IAAI,4EAAiB;AACrB,IAAI,oEAAW;AACf,CAAC","sources":["webpack://getterdunner/./src/listDisplay.service.js","webpack://getterdunner/./src/listInterface.service.js","webpack://getterdunner/./src/newItem.service.js","webpack://getterdunner/webpack/bootstrap","webpack://getterdunner/webpack/runtime/define property getters","webpack://getterdunner/webpack/runtime/hasOwnProperty shorthand","webpack://getterdunner/webpack/runtime/make namespace object","webpack://getterdunner/./src/index.js"],"sourcesContent":["import { parentListKeeper } from \"./newItem.service\";\n\n// This will export a function that will subdivide any list between things that have been completed and things that have not been completed \n\nexport function displayList() {\n\n    const completedList = [];\n    const todoList = []\n\n    for (let item in parentListKeeper.parentList) {\n        if (!item.isCompleted) todoList.push(item);\n        if (item.isCompleted) completedList.push(item);\n    }\n\n    const listDisplay = document.createElement('table');\n    listDisplay.setAttribute('id','todo-list');\n    \n    function buildHtmlList(list) {\n        for (let item in list){\n            const itemRow = document.createElement('tr');\n            const checkBox = document.createElement('td');\n            // Add a clickable check box for the cell data\n\n            const itemDisplay = document.createElement('td');\n            console.log(item);\n            itemDisplay.innerHTML = item.nameInput; \n            // if (item.isCompleted) Add in code for strikethrough css styling;\n\n            itemRow.appendChild(checkBox);\n            itemRow.appendChild(itemDisplay);\n            listDisplay.appendChild(itemRow);\n        } \n\n        return listDisplay;\n    }\n\n    const todoHtml = buildHtmlList(todoList);\n    const completedHTML = buildHtmlList(completedList);\n\n    const content = document.getElementById(`content`);\n    content.appendChild(todoHtml);\n    content.appendChild(completedHTML);\n}\n\nexport function clearList() {\n    const listDisplay = document.getElementById('todo-list');\n    if (listDisplay) {\n        listDisplay.replaceChildren();\n        listDisplay.remove();\n    }\n}","import { newTodo, parentListKeeper } from './newItem.service';\n\nexport function createNewItemForm () {\n    \n    const content = document.getElementById(`content`);\n\n    const newItemForm = document.createElement(`form`);\n    newItemForm.setAttribute(`id`,`form`);\n    newItemForm.style.cssText = `display: flex; flex-direction: column; \n        flex-basis: 50px; margin: 10px`;\n\n    const itemExample = newTodo('example');\n    for (let key in itemExample) {\n\n        if (key.substring(key.length - 5, key.length) != 'Input') continue; \n\n        const newItemField = document.createElement(`input`);\n        newItemField.setAttribute(`id`, key);\n        newItemField.style.cssText = `width: 500px` ;\n        newItemForm.appendChild(newItemField);\n    \n        const newItemLabel = document.createElement('label');\n        newItemLabel.style.cssText = `width: 100px`;\n        newItemLabel.innerHTML = key;\n    }\n\n    const submitButton = document.createElement(`button`);\n    submitButton.setAttribute(`id`, `submit-button`)\n    submitButton.innerHTML = `Add New Todo` ;\n    submitButton.style.cssText = `width: 300px` ;\n\n    newItemForm.appendChild(submitButton)\n\n    content.appendChild(newItemForm);\n}\n\nexport function clearNewItemForm () {\n    const currentForm = document.getElementById('form');\n    if (!currentForm) return;\n    \n    currentForm.replaceChildren();\n    currentForm.remove()\n}\n\nexport function addNewItem() {\n    const newItemForm = document.getElementById('form');\n    const newItem = newTodo(newItemForm.nameInput.value);\n    \n    parentListKeeper.add(newItem);\n    parentListKeeper.print();\n}","// Create a factory function that creates new to-do items\n// It should take in a number of parameters such as \n//      name (r), details (o), tags (r) (which it can take multiple), \n\nexport function newTodo (name) {   \n    \n    // add in function parameters for \"details\" and \"tags\"\n\n    // let detailsProper = details ? details : '';\n    let isCompleted = false;\n\n    // in the return object add in properties for details and tags \n    // ...details : detailsProper, tags : tags\n\n    return {nameInput : name, isCompleted : isCompleted}\n} \n\nexport const parentListKeeper = (function () {\n\n    const parentList = [];\n    const add = (item) => parentList.push(item);\n    const remove = (item) => parentList.\n        splice(parentList.indexOf(item),1);\n\n    const print = () => console.table(parentList);\n\n    return {add, remove, print, parentList};\n  })();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Filler code\nimport { clearNewItemForm, createNewItemForm, addNewItem } from './listInterface.service.js';\nimport { displayList, clearList } from './listDisplay.service.js';\n\ncreateNewItemForm();\ndisplayList();\n\nconst submitButton =  document.getElementById('submit-button');\nsubmitButton.addEventListener('click', function(event) {\n    event.preventDefault();\n    \n    addNewItem();\n\n    clearNewItemForm();\n    clearList();\n\n    createNewItemForm();\n    displayList();\n})\n\n"],"names":[],"sourceRoot":""}